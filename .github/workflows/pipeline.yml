name: Symfony and React Native

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  # symfony-lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Setup PHP
  #     uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
  #     with:
  #       php-version: '8.0'
  #   - name: Install PHP CodeSniffer
  #     run: composer global require "squizlabs/php_codesniffer=*"
  #   - name: Run PHP CodeSniffer
  #     run: ~/.composer/vendor/bin/phpcs --standard=PSR12 back-symfony/src

  react-native-lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    - name: Install ESLint
      run: npm install eslint
      working-directory: front-react-native/basketbrain
    - name: Run ESLint
      run: npx eslint
      working-directory: front-react-native/basketbrain

  # symfony-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Setup PHP
  #     uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
  #     with:
  #       php-version: '8.4.3'
  #   - name: Install dependencies
  #     run: composer install
  #     working-directory: back-symfony
  #   - name: Install Debug Bundle
  #     run: composer require symfony/debug-bundle --dev
  #     working-directory: back-symfony
  #   - name: Start Symfony server
  #     run: php bin/console server:start
  #     working-directory: back-symfony
  #   - name: Run tests
  #     run: php bin/phpunit
  #     working-directory: back-symfony
  symfony-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: symfony_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, dom, filter, gd, json, redis
          coverage: xdebug

      - name: Copy .env.test
        run: php -r "file_exists('.env.test') || copy('.env.test.example', '.env.test');"

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Create Database
        run: |
          php bin/console doctrine:database:create --env=test --if-not-exists
          php bin/console doctrine:schema:update --env=test --force || php bin/console doctrine:migrations:migrate --env=test --no-interaction

      - name: Execute tests (PHPUnit)
        env:
          DATABASE_URL: mysql://root:password@127.0.0.1:3306/symfony_test
        run: |
          mkdir -p build/test-results
          php bin/phpunit --coverage-clover build/test-results/coverage.xml --log-junit build/test-results/junit.xml
